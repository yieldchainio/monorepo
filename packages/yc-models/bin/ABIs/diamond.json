[
    {
        "anonymous": false,
        "inputs": [
            {
                "components": [
                    {
                        "internalType": "address",
                        "name": "facetAddress",
                        "type": "address"
                    },
                    {
                        "internalType": "enum IDiamond.FacetCutAction",
                        "name": "action",
                        "type": "uint8"
                    },
                    {
                        "internalType": "bytes4[]",
                        "name": "functionSelectors",
                        "type": "bytes4[]"
                    }
                ],
                "indexed": false,
                "internalType": "struct IDiamond.FacetCut[]",
                "name": "_diamondCut",
                "type": "tuple[]"
            },
            {
                "indexed": false,
                "internalType": "address",
                "name": "_init",
                "type": "address"
            },
            {
                "indexed": false,
                "internalType": "bytes",
                "name": "_calldata",
                "type": "bytes"
            }
        ],
        "name": "DiamondCut",
        "type": "event"
    },
    {
        "inputs": [
            {
                "components": [
                    {
                        "internalType": "address",
                        "name": "facetAddress",
                        "type": "address"
                    },
                    {
                        "internalType": "enum IDiamond.FacetCutAction",
                        "name": "action",
                        "type": "uint8"
                    },
                    {
                        "internalType": "bytes4[]",
                        "name": "functionSelectors",
                        "type": "bytes4[]"
                    }
                ],
                "internalType": "struct IDiamond.FacetCut[]",
                "name": "_diamondCut",
                "type": "tuple[]"
            },
            { "internalType": "address", "name": "_init", "type": "address" },
            { "internalType": "bytes", "name": "_calldata", "type": "bytes" }
        ],
        "name": "diamondCut",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "bytes4",
                "name": "_functionSelector",
                "type": "bytes4"
            }
        ],
        "name": "facetAddress",
        "outputs": [
            { "internalType": "address", "name": "facetAddress_", "type": "address" }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "facetAddresses",
        "outputs": [
            {
                "internalType": "address[]",
                "name": "facetAddresses_",
                "type": "address[]"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            { "internalType": "address", "name": "_facet", "type": "address" }
        ],
        "name": "facetFunctionSelectors",
        "outputs": [
            {
                "internalType": "bytes4[]",
                "name": "_facetFunctionSelectors",
                "type": "bytes4[]"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "facets",
        "outputs": [
            {
                "components": [
                    {
                        "internalType": "address",
                        "name": "facetAddress",
                        "type": "address"
                    },
                    {
                        "internalType": "bytes4[]",
                        "name": "functionSelectors",
                        "type": "bytes4[]"
                    }
                ],
                "internalType": "struct IDiamondLoupe.Facet[]",
                "name": "facets_",
                "type": "tuple[]"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            { "internalType": "bytes4", "name": "_interfaceId", "type": "bytes4" }
        ],
        "name": "supportsInterface",
        "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
            },
            {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
    },
    {
        "inputs": [],
        "name": "owner",
        "outputs": [
            { "internalType": "address", "name": "owner_", "type": "address" }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            { "internalType": "address", "name": "_newOwner", "type": "address" }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            { "internalType": "address", "name": "executor", "type": "address" }
        ],
        "name": "blacklistExecutor",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "getExecutors",
        "outputs": [
            { "internalType": "address[]", "name": "executors", "type": "address[]" }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "getOwner",
        "outputs": [
            { "internalType": "address", "name": "ownerAddress", "type": "address" }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            { "internalType": "address", "name": "suspect", "type": "address" }
        ],
        "name": "isAnExecutor",
        "outputs": [
            { "internalType": "bool", "name": "isExecutor", "type": "bool" }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            { "internalType": "address", "name": "executor", "type": "address" }
        ],
        "name": "whitelistExecutor",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "contract Vault",
                "name": "strategy",
                "type": "address"
            },
            {
                "internalType": "uint256",
                "name": "operationIndex",
                "type": "uint256"
            },
            {
                "internalType": "bytes[]",
                "name": "commandCalldatas",
                "type": "bytes[]"
            }
        ],
        "name": "hydrateAndExecuteRun",
        "outputs": [
            { "internalType": "uint256", "name": "gasSpent", "type": "uint256" }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "contract Vault",
                "name": "strategy",
                "type": "address"
            }
        ],
        "name": "triggerStrategyRun",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "internalType": "address",
                "name": "strategyAddress",
                "type": "address"
            },
            {
                "indexed": true,
                "internalType": "address",
                "name": "creator",
                "type": "address"
            },
            {
                "indexed": true,
                "internalType": "address",
                "name": "depositToken",
                "type": "address"
            }
        ],
        "name": "VaultCreated",
        "type": "event"
    },
    {
        "inputs": [
            { "internalType": "bytes[]", "name": "seedSteps", "type": "bytes[]" },
            { "internalType": "bytes[]", "name": "treeSteps", "type": "bytes[]" },
            { "internalType": "bytes[]", "name": "uprootSteps", "type": "bytes[]" },
            {
                "internalType": "address[2][]",
                "name": "approvalPairs",
                "type": "address[2][]"
            },
            {
                "components": [
                    {
                        "internalType": "enum TriggerTypes",
                        "name": "triggerType",
                        "type": "uint8"
                    },
                    { "internalType": "bytes", "name": "extraData", "type": "bytes" }
                ],
                "internalType": "struct Trigger[]",
                "name": "triggers",
                "type": "tuple[]"
            },
            {
                "internalType": "contract ERC20",
                "name": "depositToken",
                "type": "address"
            },
            { "internalType": "bool", "name": "isPublic", "type": "bool" }
        ],
        "name": "createVault",
        "outputs": [
            {
                "internalType": "contract Vault",
                "name": "createdVault",
                "type": "address"
            }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "withdraw",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            { "internalType": "contract Vault", "name": "vault", "type": "address" },
            { "internalType": "contract ERC20", "name": "token", "type": "address" }
        ],
        "name": "getStrategyStash",
        "outputs": [
            { "internalType": "uint256", "name": "stashedAmount", "type": "uint256" }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            { "internalType": "address", "name": "tokenAddress", "type": "address" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
        ],
        "name": "stashTokens",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            { "internalType": "address", "name": "tokenAddress", "type": "address" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
        ],
        "name": "unstashTokens",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "contract Vault",
                "name": "strategy",
                "type": "address"
            },
            {
                "internalType": "address payable",
                "name": "receiver",
                "type": "address"
            },
            { "internalType": "uint256", "name": "debtInWei", "type": "uint256" }
        ],
        "name": "collectVaultGasDebt",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "strategyAddress",
                "type": "address"
            }
        ],
        "name": "fundGasBalance",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
    },
    {
        "inputs": [
            { "internalType": "uint256", "name": "operationIndex", "type": "uint256" }
        ],
        "name": "stashOperationGas",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "getStrategiesList",
        "outputs": [
            {
                "internalType": "contract Vault[]",
                "name": "strategies",
                "type": "address[]"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "contract Vault",
                "name": "strategy",
                "type": "address"
            }
        ],
        "name": "getStrategyGasBalance",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "vaultGasBalance",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "contract Vault",
                "name": "strategy",
                "type": "address"
            },
            { "internalType": "uint256", "name": "opIndex", "type": "uint256" }
        ],
        "name": "getStrategyOperationGas",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "strategyOperationGas",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "contract Vault",
                "name": "strategy",
                "type": "address"
            }
        ],
        "name": "getStrategyState",
        "outputs": [
            {
                "components": [
                    { "internalType": "bool", "name": "registered", "type": "bool" },
                    {
                        "internalType": "uint256",
                        "name": "gasBalanceWei",
                        "type": "uint256"
                    }
                ],
                "internalType": "struct StrategyState",
                "name": "strategyState",
                "type": "tuple"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "checkStrategiesTriggers",
        "outputs": [
            {
                "internalType": "bool[][]",
                "name": "triggersStatus",
                "type": "bool[][]"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256[]",
                "name": "vaultsIndices",
                "type": "uint256[]"
            },
            {
                "internalType": "bool[][]",
                "name": "triggersSignals",
                "type": "bool[][]"
            }
        ],
        "name": "executeStrategiesTriggers",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            { "internalType": "contract Vault", "name": "vault", "type": "address" }
        ],
        "name": "getVaultTriggers",
        "outputs": [
            {
                "components": [
                    {
                        "internalType": "enum TriggerTypes",
                        "name": "triggerType",
                        "type": "uint8"
                    },
                    {
                        "internalType": "uint256",
                        "name": "lastStrategyRun",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "requiredDelay",
                        "type": "uint256"
                    }
                ],
                "internalType": "struct RegisteredTrigger[]",
                "name": "triggers",
                "type": "tuple[]"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "components": [
                    {
                        "internalType": "enum TriggerTypes",
                        "name": "triggerType",
                        "type": "uint8"
                    },
                    { "internalType": "bytes", "name": "extraData", "type": "bytes" }
                ],
                "internalType": "struct Trigger[]",
                "name": "triggers",
                "type": "tuple[]"
            },
            { "internalType": "contract Vault", "name": "vault", "type": "address" }
        ],
        "name": "registerTriggers",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            { "internalType": "contract Vault", "name": "vault", "type": "address" },
            { "internalType": "uint256", "name": "triggerIdx", "type": "uint256" }
        ],
        "name": "executeAutomationTrigger",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "components": [
                    {
                        "internalType": "enum TriggerTypes",
                        "name": "triggerType",
                        "type": "uint8"
                    },
                    { "internalType": "bytes", "name": "extraData", "type": "bytes" }
                ],
                "internalType": "struct Trigger",
                "name": "automationTrigger",
                "type": "tuple"
            },
            { "internalType": "contract Vault", "name": "vault", "type": "address" },
            { "internalType": "uint256", "name": "triggerIdx", "type": "uint256" }
        ],
        "name": "registerAutomationTrigger",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            { "internalType": "contract Vault", "name": "vault", "type": "address" },
            { "internalType": "uint256", "name": "triggerIdx", "type": "uint256" }
        ],
        "name": "shouldExecuteAutomationTrigger",
        "outputs": [
            { "internalType": "bool", "name": "shouldExecute", "type": "bool" }
        ],
        "stateMutability": "view",
        "type": "function"
    }
]
